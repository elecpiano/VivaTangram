{"version":3,"sources":["../../../../assets/Script/assets/Script/FrameCanvasController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class FrameCanvasController extends cc.Component {\n\n    //#region Properties\n\n    draw: cc.Graphics;\n    drawDuration: number = 0.5;\n    drawTime: number = 0;\n    drawing: boolean = false;\n\n    Frames = Array<string>();\n    Dots = Array<cc.Vec2>();\n\n    LINE_WIDTH = 8;\n    LINE_COLOR = \"#353535\";\n\n    //#endregion\n\n    start () {\n        this.draw = this.getComponent(cc.Graphics);\n        if (!this.draw) {\n            this.draw = this.addComponent(cc.Graphics);\n        }\n    }\n\n    update (dt) {\n        if (this.drawing) {\n            if (this.drawTime > this.drawDuration) {\n                this.FinishDraw();\n            }\n            else{\n                this.UpdateDraw(dt);\n            }\n        }\n    }\n\n    //#region Frame\n\n    StartDraw(dots:Array<cc.Vec2>, frames:string[]){\n        this.Dots = dots;\n\n        this.draw.clear();\n\n        this.draw.lineWidth = this.LINE_WIDTH;\n        this.draw.strokeColor = cc.hexToColor(this.LINE_COLOR);\n\n        //frame list\n        this.Frames = frames;\n\n        // for (let index = 0; index < pointArray.length; index++) {\n        //     let x = Number(pointArray[index].split(\",\")[0]);\n        //     let y = 512 - Number(pointArray[index].split(\",\")[1]);\n        //     this.pointList.push(new cc.Vec2(x,y));\n        // }\n\n        this.drawTime = 0;\n        this.drawing = true;\n    }\n\n    UpdateDraw(dt: number){\n        this.drawTime += dt;\n        \n        for (let i = 0; i < this.Frames.length; i++) {\n            let frameStr = this.Frames[i];\n            let pointList = frameStr.split(\",\");\n\n            let index = 0;\n            while (index < pointList.length) {\n                let pointFrom = this.Dots[pointList[index]];\n                let pointDest: cc.Vec2 = null;\n\n                if (index == pointList.length - 1) {\n                    pointDest = this.Dots[pointList[0]];\n                }\n                else{\n                    pointDest = this.Dots[pointList[index+1]];\n                }\n                \n                let pointTo = pointFrom.lerp(pointDest, this.drawTime/this.drawDuration);\n\n                this.draw.moveTo(pointFrom.x,pointFrom.y);\n                this.draw.lineTo(pointTo.x,pointTo.y);\n                this.draw.stroke();\n                index ++;\n            }\n        }\n\n    }\n\n    FinishDraw(){\n        this.drawing = false;\n        this.drawTime = 0;\n    }\n\n    ClearFrame(){\n        this.draw.clear();\n    }\n\n    //#endregion\n\n}\n"]}