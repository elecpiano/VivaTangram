{"version":3,"sources":["Dictionary.ts"],"names":[],"mappings":";;;;;AACA;IAGI;QAFQ,SAAI,GAAS,EAAE,CAAC;QAChB,WAAM,GAAS,EAAE,CAAC;IACJ,CAAC;IAEvB,wBAAG,GAAH,UAAI,GAAQ,EAAE,KAAU;QACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,2BAAM,GAAN,UAAO,GAAQ;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,gCAAW,GAAX,UAAY,GAAO;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACtC,mCAAmC;QACnC,mEAAmE;QACnE,uCAAuC;QACvC,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAW,GAAX,UAAY,GAAQ;QAChB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAChC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;gBACd,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,6BAAQ,GAAR,UAAS,GAAQ,EAAE,KAAU;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACtC,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;YAC3B,OAAO,IAAI,CAAC;SACX;QACL,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,4BAAO,GAAP;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,8BAAS,GAAT;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEL,iBAAC;AAAD,CAvDA,AAuDC,IAAA","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["\nexport default class Dictionary<KT, VT> {\n    private keys: KT[] = [];\t\n    private values: VT[] = [];\t\n    public constructor() {}\n\n    Add(key: any, value: any){\n        this.keys.push(key);\n        this.values.push(value);\n    }\n\n    Remove(key: any) {\n        let index = this.keys.indexOf(key, 0);\n        this.keys.splice(index, 1);\t\n        this.values.splice(index, 1);\n    }\n\n    TryGetValue(key: KT): VT {\n        var index = this.keys.indexOf(key, 0);\n        // console.log(\"xxx key : \" + key);\n        // console.log(\"xxx keys : \" + this.keys.length + \"/\" + this.keys);\n        // console.log(\"xxx index : \" + index);\n        if (index != -1) {\n            return this.values[index];\n        }\n        return null;\n    }\n\n    ContainsKey(key: any): boolean {\n        let ks = this.keys;\n        for (let i = 0; i < ks.length; ++i) {\n            if (ks[i] == key) {\n                return true;\n            }\n        }\t\n        return false;\n    }\n\n    SetValue(key: any, value: any): boolean {\n        var index = this.keys.indexOf(key, 0);\n        if (index != -1) {\n            this.keys[index] = key;\n            this.values[index] = value;\t\t\n            return true;\n            }\t\n        return false;\n    }\n\n    GetKeys(): KT[] {\t\n        return this.keys;\n    }\n    \n    GetValues(): VT[] {\t\n        return this.values;\n    }   \n\n}\n\n\n"]}