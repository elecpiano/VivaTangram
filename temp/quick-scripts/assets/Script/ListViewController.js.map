{"version":3,"sources":["ListViewController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import ListItemController from \"./ListItemController\";\nimport GlobalData from \"./Global\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ListViewController extends cc.Component {\n\n    //#region Properties\n\n    @property(cc.Node)\n    ProgressBar: cc.Node = null;\n    @property(cc.Label)\n    PageLabel: cc.Label = null;\n    @property(cc.Node)\n    UIPanel: cc.Node = null;\n\n    @property(ListItemController)\n    ListItemTemplate: ListItemController = null;\n    \n    ROW_COUNT = 7;\n    COLUMN_COUNT = 4;\n    ITEM_WIDTH = 240;\n    ITEM_HEIGHT = 220;\n    ITEM_MARGIN_L = 120;\n    ITEM_MARGIN_T = 120;\n    APPEAR_INTERVAL: number = 0.015;\n    PRGRESS_DURATION = 0.7;\n\n    ItemNodes = new Array<cc.Node>();\n    Items = new Array<ListItemController>();\n\n    ParamData = Array<string>();\n    PageData = Array<string>();\n    PageIndex = 0;\n\n    AppearQueue = new Array<number>();\n\n    ShowShape = false;\n\n    //#endregion\n\n    //#region Lifecycle\n\n    onLoad () {\n        this.InitItemList();\n        this.LoadData();\n        this.UIPanel.opacity = 0;\n    }\n\n    start () {\n        // this.node.runAction(cc.sequence(\n        //     cc.delayTime(0.3),\n        //     cc.callFunc(()=>this.ShowList(),this)\n        // ));\n\n        this.ShowProgressBar();\n    }\n\n    // update (dt) {}\n\n    DoThingsAfterProgress(){\n        //hide progress bar\n        this.ProgressBar.setScale(0,1);\n\n        //show UI Panel\n        this.UIPanel.opacity = 255;\n\n        //set page\n        this.SetPage();\n\n        //show list\n        this.ShowList();\n    }\n\n    //#endregion\n\n    //#region Navigation\n\n    NavigateToGameBoard(){\n        cc.director.loadScene(\"GameBoard\");\n    }\n\n    TapItem(event, customEventData){\n        let index = 28*this.PageIndex + Number(customEventData);\n        console.log(\"xxx item tap : \" + index);\n\n        let globalNode = cc.director.getScene().getChildByName('GlobalNode');       \n        globalNode.getComponent(GlobalData).SelectedItemIndex = index;\n        globalNode.getComponent(GlobalData).NavigatedFromListView = true;\n\n        cc.director.loadScene(\"GameBoard\");\n    }\n\n    //#endregion\n\n    //#region Param Data\n\n    LoadData(){\n        //pick a param string\n        cc.loader.loadRes(\n            \"param\",\n            (error, txt:string)=>{\n                this.ParamData = txt.split(\"\\n\");\n            }\n        );\n    }\n\n    RenderItem(item:ListItemController, itemData:string){\n        // // pick a random tangram\n        // let rand = Math.floor(Math.random() * this.ParamData.length);\n        // let itemData = this.ParamData[rand];\n\n        // begin prepare\n        let paramArray = itemData.split(\"/\");\n\n        // dots\n        let dots = new Array<cc.Vec2>();\n        let dotsPositonStr = paramArray[0].split(\";\");\n        for (let i = 0; i < dotsPositonStr.length; i++) {\n            let posStr = dotsPositonStr[i];\n            let x = Math.round(Number(posStr.split(\",\")[0]));\n            let y = Math.round(Number(posStr.split(\",\")[1]));\n            let dotPosition = new cc.Vec2(x,512 - y);\n            dots.push(dotPosition);\n        }\n\n        //shapes\n        let shapes = Array<string>();\n        let shapeListStr = paramArray[1].split(\";\");\n        for (let i = 0; i < shapeListStr.length; i++) {\n            let shapeStr = shapeListStr[i];\n            shapes.push(shapeStr);\n        }\n\n        //frames\n        let frames = Array<string>();\n        let frameListStr = paramArray[2].split(\";\");\n        for (let i = 0; i < frameListStr.length; i++) {\n            let frameStr = frameListStr[i];\n            frames.push(frameStr);\n        }\n\n        //draw item\n        item.Show(dots, shapes, frames, this.ShowShape);\n    }\n\n    //#endregion\n\n    //#region List Management\n\n    InitItemList(){\n        this.Items.splice(0,this.Items.length);\n        this.ItemNodes.splice(0,this.ItemNodes.length);\n\n        let target = this.ListItemTemplate.node;\n\n        for (let row = 0; row < this.ROW_COUNT; row++) {\n            for (let column = 0; column < this.COLUMN_COUNT; column++) {\n                let itemNode = cc.instantiate(target);\n                let btn = itemNode.getComponent(cc.Button);\n                btn.clickEvents[0].customEventData = (row * this.COLUMN_COUNT + column).toString();\n                itemNode.parent = target.parent;\n                itemNode.setPosition(column * this.ITEM_WIDTH + this.ITEM_MARGIN_L, 0 - row * this.ITEM_HEIGHT - this.ITEM_MARGIN_T);\n                this.ItemNodes.push(itemNode);\n\n                let item = itemNode.getComponent<ListItemController>(ListItemController);\n                this.Items.push(item);\n            }\n        }\n    }\n\n    // AppearIndex = 0;\n    ShowList(){\n        this.ClearItemList();\n\n        // this.AppearIndex = 0;\n        this.AppearQueue.splice(0,this.AppearQueue.length);\n\n        let tempArr = new Array<number>();\n        for (let i = 0; i < this.PageData.length; i++) {\n            tempArr.push(i);\n        }\n\n        while (tempArr.length > 0) {\n            let rand = Math.floor(Math.random() * tempArr.length);\n            let data = tempArr.splice(rand,1)[0];\n            this.AppearQueue.push(data);\n        }\n\n        this.ShowNextItem();\n    }\n\n    ShowNextItem(){\n        // if (this.AppearIndex < this.COLUMN_COUNT * this.ROW_COUNT && this.AppearIndex < this.PageData.length) {\n        if (this.AppearQueue.length > 0) {\n            let index = this.AppearQueue.pop();\n            this.RenderItem(this.Items[index], this.PageData[index]);\n            // this.RenderItem(this.Items[this.AppearIndex], this.PageData[this.AppearIndex]);\n            // this.AppearIndex++;\n\n            this.node.runAction(cc.sequence(\n                cc.delayTime(this.APPEAR_INTERVAL),\n                cc.callFunc(()=>this.ShowNextItem(),this)\n            ));\n        }\n    }\n\n    ClearItemList(){\n        for (let i = 0; i < this.Items.length; i++) {\n            this.Items[i].FinishDraw();\n            this.Items[i].ClearDraw();\n        }\n    }\n\n    //#endregion\n\n    //#region Page management\n\n    NextPage(){\n        let maxIndex = Math.ceil(this.ParamData.length/(this.COLUMN_COUNT * this.ROW_COUNT)) - 1;\n        if (this.PageIndex < maxIndex) {\n            this.PageIndex++;\n        }\n        else{\n            this.PageIndex = 0;\n        }\n        this.SetPage();\n        this.ShowList();\n    }\n\n    PreviousPage(){\n        if (this.PageIndex > 0) {\n            this.PageIndex--;    \n        }\n        else{\n            let maxIndex = Math.ceil(this.ParamData.length/(this.COLUMN_COUNT * this.ROW_COUNT)) - 1;\n            this.PageIndex = maxIndex;\n        }\n        this.SetPage();\n        this.ShowList();\n    }\n\n    SetPage(){\n        let pageLabelString = (this.PageIndex + 1).toString() + \"/\" + Math.ceil(this.ParamData.length/(this.COLUMN_COUNT * this.ROW_COUNT)).toString();\n        this.PageLabel.string = pageLabelString;\n\n        // console.log(\"xxx page \" + pageLabelString);\n\n        let itemCountPerPage = this.COLUMN_COUNT * this.ROW_COUNT;\n        let idx = itemCountPerPage * this.PageIndex;\n        this.PageData.splice(0,this.PageData.length);\n        while (idx < (this.ParamData.length -1)) {\n            if (this.PageData.length < itemCountPerPage) {\n                this.PageData.push(this.ParamData[idx]);\n            }\n            else{\n                break;\n            }\n            idx++\n        }\n    }\n\n    //#endregion\n\n    //#region Test\n\n    Test(){\n        // this.ShowShape = false;\n        // this.ShowList();\n    }\n\n    Test2(){\n        // this.ShowShape = true;\n        // this.ShowList();\n    }\n\n    //#endregion\n    \n    //#region Progress Bar\n\n    ShowProgressBar(){\n        this.ProgressBar.setScale(0,1);\n        this.ProgressBar.runAction(cc.sequence(\n            cc.scaleTo(this.PRGRESS_DURATION, 1, 1),\n            cc.callFunc(()=>this.DoThingsAfterProgress())\n        ));\n    }\n\n    //#endregion\n\n}\n"]}